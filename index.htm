<!DOCTYPE html>

<html land="en">
 <head>
  <title>first repo </title>
	  <link rel="stylesheet" type="text/css" media="screen" href="css/xthdraft.css"/>
      <script type="text/javascript" charset="utf-8" src="js/globals.js"></script>
 </head>

 <body>
    <div>
	  For this repo, I first created a repo in github by uploading  index.htm, globals.js and xthdraft.css
	  this procedure is explained in:   https://help.github.com/articles/cloning-a-repository/

	  now we have a clone of the repository in github which by default is named "origin"
	  this now exists in c:\dedalus\firstrepo\firstrepo

	  we can now do stuff from the command line

	  first, cd into the local repo:     cd firstrepo

	  to get the name of the remote repository:   git remote -v
	  // origin  https://github.com/xthdraft/firstrepo.git (fetch)
      // origin  https://github.com/xthdraft/firstrepo.git (push)

	  to get url of the remote repository named "origin" :    git remote get-url origin
	  // https://github.com/xthdraft/firstrepo

	  ***   PUSHING CHANGES TO THE REMOTE REPOSITORY

	  after changing file (eg index.htm) in local repo, you add it to the repo:   git add "index.htm"
	  then commit it:     git commit -m 'FIRST CHANGE'
	 
	  then push to github:   git push --set-upstream origin master 

	  same procedure next change etc

	  Basically, when setting up the repo on github the first time, use the UPLOAD facility to upload all folders 
	  for a project into a new repo on github.

	  Then CLONE back to a corresponding empty folder on the local machine.

	  That sets up a synced system.

	  After that, use git command line to change files locally, commit them and push to github repo.

	  
	</div>
 </body>
</html>
